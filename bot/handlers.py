from aiogram import F, Router
from aiogram.types import (
    Message, WebAppInfo, ReplyKeyboardMarkup,
    KeyboardButton, ReplyKeyboardRemove, FSInputFile
)
from aiogram.fsm.context import FSMContext
import os
import asyncio

from bot.FSM import FileUploadState
from db_manager import DBManager

router = Router()
PROCESSED_FOLDER = "processed"
db = DBManager()

@router.message(F.text == "/start")
async def start_command(message: Message, state: FSMContext):
    await state.set_state(FileUploadState.waiting_upload)
    await state.update_data(saved_message=message)

    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(
            text="–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã",
            web_app=WebAppInfo(url="https://fearlessly-jocular-bowfin.cloudpub.ru/")
        )]],
        resize_keyboard=True
    )

    expected_count = db.get_expected_files_count(message.from_user.id)
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ—Ñ–∞–π–ª:", reply_markup=keyboard)

    if expected_count > 0:
        asyncio.create_task(watch_and_send_ready_files(message, state, expected_count))


async def watch_and_send_ready_files(message: Message, state: FSMContext, expected_count: int):
    user_id = message.from_user.id

    await message.answer(f"‚è≥ –û–∂–∏–¥–∞–µ–º {expected_count} —Ñ–∞–π–ª(–æ–≤)...")

    for _ in range(60):  # –¥–æ 5 –º–∏–Ω—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è
        await asyncio.sleep(5)

        transcript_name = db.get_pending_file(user_id)
        if transcript_name:
            file_path = os.path.join(PROCESSED_FOLDER, str(user_id), transcript_name)
            if os.path.exists(file_path):
                document = FSInputFile(path=file_path, filename=transcript_name)
                await message.answer_document(
                    document=document,
                    caption=f"üéß –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–∞: <b>{transcript_name}</b>",
                    parse_mode="HTML"
                )
                try:
                    os.remove(file_path)
                except Exception as e:
                    await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}")

                db.delete_file_record(user_id, transcript_name)
                expected_count -= 1

        if expected_count <= 0:
            await message.answer("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!", reply_markup=ReplyKeyboardRemove())
            await state.clear()
            return

    await message.answer("‚åõ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å. –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.")
    await state.clear()